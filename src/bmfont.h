///////////////////////////////////////////////////////////////////////////////
/// @file:		bmfont.h
/// @author:	Jacob Adkins (jpadkins)
/// @brief:		Manages a hash map of glyph metrics from a BMFont file (.fnt)
///				corresponding to a bitmap glyph atlas generated by FontBuilder,
///				Bitmap Font Generator, etc...
///////////////////////////////////////////////////////////////////////////////

#ifndef BMFONT_H
#define BMFONT_H

///////////////////////////////////////////////////////////////////////////////
/// Structs
///////////////////////////////////////////////////////////////////////////////

typedef struct _BMFont BMFont;

typedef struct {
	int glyph;
	struct {
		int x;
		int y;
	} position;
	struct {
		int width;
		int height;
	} size;
	struct {
		int x;
		int y;
	} offset;
} BMFontInfo;

///////////////////////////////////////////////////////////////////////////////
/// @brief	Returns a pointer to a new BMFont
///
/// @param	filename Path to a BMFont .fnt file
///
/// @return	pointer to the new BMFont
///////////////////////////////////////////////////////////////////////////////
BMFont * BMFont_Create(const char *filename);

///////////////////////////////////////////////////////////////////////////////
/// @brief	Returns a pointer to the BMFontInfo struct for a given glyph
///
/// @param	this	A BMFont
/// @param	glyph	UTF-32 value of a glyph
///
/// @return Pointer to the BMFontInfo struct
///////////////////////////////////////////////////////////////////////////////
BMFontInfo const * BMFont_GetInfoPtr(BMFont * this, int glyph);

///////////////////////////////////////////////////////////////////////////////
/// @brief	Frees the memory associated with a BMFont
///
/// @param	this	A BMFont
///////////////////////////////////////////////////////////////////////////////
void BMFont_Destroy(BMFont *this);

#endif
